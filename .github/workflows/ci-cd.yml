name: Go CI/CD Pipeline with Docker

on:
  push:
    branches:
      - master  # Запуск только для ветки master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      # Проверяем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Логин в Docker Hub (если нужно)
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Строим Docker-образ
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-go-app:${{ github.sha }} .

      # Загружаем образ в Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-go-app:${{ github.sha }}

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build  # Запускается после успешной сборки

    steps:
      # Проверяем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # Устанавливаем Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      # Запускаем тесты
      - name: Run tests
        run: |
          go test ./... -v

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test  # Запускается после тестов

    steps:
      # Проверяем код из репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts  # Добавляем хост в known_hosts

      # Деплой на сервер с авторизацией по паролю
      - name: Deploy Docker container
        run: |
          echo "${{ secrets.DEPLOY_PASSWORD }}" | sshpass ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            "docker pull ${{ secrets.DOCKER_USERNAME }}/my-go-app:${{ github.sha }} && \
            docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/my-go-app:${{ github.sha }}"
